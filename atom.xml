<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Louis</title>
  
  <subtitle>Louis</subtitle>
  <link href="https://louissrliu.github.io/atom.xml" rel="self"/>
  
  <link href="https://louissrliu.github.io/"/>
  <updated>2022-12-13T15:13:58.554Z</updated>
  <id>https://louissrliu.github.io/</id>
  
  <author>
    <name>ShiRong Liu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Welcome to Louis</title>
    <link href="https://louissrliu.github.io/2022/12/13/Welcome-to-the-new-Tranquilpeak/"/>
    <id>https://louissrliu.github.io/2022/12/13/Welcome-to-the-new-Tranquilpeak/</id>
    <published>2022-12-13T15:13:58.554Z</published>
    <updated>2022-12-13T15:13:58.554Z</updated>
    
    <content type="html"><![CDATA[<!-- excerpt --><h2 id="who-am-i">Who am I</h2><p>My name is Shi-Rong Liu, and I am a Senior Engineer. My research andengineering interests are mainly in the area of open-source, generalcomputer science, and user-friendly software engineering.</p><h2 id="about-this-site">About This Site</h2><p>This website was formally built in the Autumn of 2022, but migratingfrom <a href="http://louiscode00.com/"title="http://louiscode00.com/">Jekyll</a> to Hexo and changing to thisstyle.</p><p>The main purposes of this website are list here: + Discuss thetechnical details of user-friendly software engineering/tool, andcomputer sciences + Document the implementation of algorithms forsolving real problems + Present my independent side projects + Record mypersonal achievements, and experiences</p><p>It should be noted that all the contents of this website are solelymy own and do not express the views or opinions of my employer.</p><h2 id="contact-me">Contact Me</h2><p>If you have any piece of advice or critical comments regarding myblog posts, please leave your comments under the blog post. If you haveany questions regarding my <a href="https://github.com/s311354"title="https://github.com/s311354">GitHub</a> open source projects,please open an issue ticket in the repository. This will be beneficialfor all the readers and save our time for not answering duplicatedquestions. For private questions or private inquiry, please contact mevia my personal <a href="mailto:qazqazqaz850@gmail.com">email</a>.</p>]]></content>
    
    
    <summary type="html">&lt;!-- Quote  --&gt;
&lt;p class=&quot;message&quot; style=&quot;font-family:cursive&quot;&gt;
&lt;q&gt; &quot;No amount of genius can overcome a preoccupation with detail&quot; -
Marion Levy Jr.&lt;/q&gt;
&lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    <category term="releases" scheme="https://louissrliu.github.io/categories/louissrliu/releases/"/>
    
    
    <category term="hexo theme" scheme="https://louissrliu.github.io/tags/hexo-theme/"/>
    
  </entry>
  
  <entry>
    <title>Introduction of Hamming Code</title>
    <link href="https://louissrliu.github.io/2022/12/12/Introduction_of_Hamming_Code/"/>
    <id>https://louissrliu.github.io/2022/12/12/Introduction_of_Hamming_Code/</id>
    <published>2022-12-11T16:00:00.000Z</published>
    <updated>2022-12-13T15:53:32.187Z</updated>
    
    <content type="html"><![CDATA[<p>Either computer data storage or telecommunication, regardless of the data storages and transmission, is non-zero probabilities that the data could be changed while it’s being stored or transmitted. There is always a code-word with block length without free bit-errors. That means the data probably could be changed while it is being processed or transmitted. If the machine can’t locate the position of the error and correct it, the information might be lost forever.</p><span id="more"></span><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Early, <a href="https://en.wikipedia.org/wiki/Richard_Hamming" title="https://en.wikipedia.org/wiki/Richard_Hamming">Richard Hamming</a>, the mathematician and computer scientist, grew increasingly fustrated with having to restart his programs from scratch due to detected errors in the relays. After that and over the few years, he worked on the problem of error-correction, developing an increasingly powerful array of algorithms, which is now known as Hamming code. This invented code still remains in use today in application such as Error correction code memory.</p><p>In this post, I would like to try to walk through how Hamming code were invented mathematically, and also the fundamental theory of error detection and error correction slightly.</p><h2 id="Error-Detection-amp-Error-Correction"><a href="#Error-Detection-amp-Error-Correction" class="headerlink" title="Error Detection & Error Correction"></a>Error Detection &amp; Error Correction</h2><p>Error detection and error correction are different techniques that enable reliable delivery of digital data over unreliable communications channels. Usually error detection is much simpler whereas error correction could be more complicated. In addition, error detection and error correction does not always work. That means all error-detection and error correction methods only work below a certain error rate. Above that rate, the line is simply not usable.</p><h3 id="Error-Detecting-Code"><a href="#Error-Detecting-Code" class="headerlink" title="Error Detecting Code"></a>Error Detecting Code</h3><h4 id="Parity"><a href="#Parity" class="headerlink" title="Parity"></a>Parity</h4><p>Parity bit appended to a binary number provides the simplest form of error detecting code. If a single bit in the resulting value is changed, then it will no longer have the correct parity: changing a bit in the orginal number gives it a different parity than the recorded one, and changing the parity bit while not changing the number it was derived from again produces an incorrect result.</p><p>The following is a simple example of attaching 1 parity bit to 7 bits of data, making the bit string to always have even number of 1s. Therefore, the XOR of the 8-bit data is always 0.</p><div class="table-container"><table><thead><tr><th>Data (7 Bits)</th><th>Count of 1-Bits</th><th>Parity Bit</th><th>Data Including Parity (8 Bits)</th><th>XOR</th></tr></thead><tbody><tr><td>0000000</td><td>0</td><td>0</td><td>00000000</td><td>0</td></tr><tr><td>1010001</td><td>3</td><td>1</td><td>10100011</td><td>0</td></tr><tr><td>1101001</td><td>4</td><td>0</td><td>11010010</td><td>0</td></tr><tr><td>1111111</td><td>7</td><td>1</td><td>11111111</td><td>0</td></tr></tbody></table></div><p>If the bit string has one single error, either in the data or at the parity bit position, the number of 1st in the bit string will not be even, and XOR will not be 0. However, if there are even number of errors in the bit string, the error could never be detected, as XOR would remain 0.</p><p>Moreover, parity does not indicate which bit contained the error, even when it can detect it. The data must be discarded entirely and re-transmitted from scratch, which could be inconvenient and time-consuming.</p><h3 id="Error-Correcting-Code"><a href="#Error-Correcting-Code" class="headerlink" title="Error Correcting Code"></a>Error Correcting Code</h3><h4 id="Repetitions"><a href="#Repetitions" class="headerlink" title="Repetitions"></a>Repetitions</h4><p>The repetition code is one of the most basic error-correcting codes. In order to transmit a message over a noisy channel that may corrupt the transmission in a few places, the idea of the repetition code is to just repeat the message several times in order to ensure that it was sent correctly.</p><p>The following is a simple example of repeating every bit from 3 bits of data 3 times.</p><div class="table-container"><table><thead><tr><th>Data (3 Bits)</th><th>Number of Repetitions</th><th>Data Including Repetitions</th></tr></thead><tbody><tr><td>000</td><td>3</td><td>000000000</td></tr><tr><td>010</td><td>3</td><td>000111000</td></tr><tr><td>101</td><td>3</td><td>111000111</td></tr><tr><td>111</td><td>3</td><td>111111111</td></tr></tbody></table></div><p>If the data including repetitions received are not identical, an error occurred during transmission. If the channel is clean enough, most of the time only one bit will change in each triple. Therefore, 001, 010, and 100 each correspond to 0 bit, while 110, 101, and 001 correspond to a 1 bit, with the greater quantity of digits that are the same (‘0’ or a ‘1’) indicating what the data bit should be.</p><p>However, such repetition code cannot correctly repair all errors, but could be mitigated by using larger number of repetitions. The more bit repetitions to vote, the more robust the error correction code to error rate. The drawback is that it will reduce throughput and the efficiency drops drastically as we increase the number of times each bit is duplicated.</p><h2 id="Hamming-Codes"><a href="#Hamming-Codes" class="headerlink" title="Hamming Codes"></a>Hamming Codes</h2><p>Hamming codes can detect one-bit and two-bit errors, or correct one-bit errors without detection of uncorrested errors. In mathematical terms, Hamming codes are a class of binary linear code. For each integer <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.312ex;" xmlns="http://www.w3.org/2000/svg" width="5.169ex" height="1.819ex" role="img" focusable="false" viewBox="0 -666 2284.6 804"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(728.8,0)"><path data-c="2265" d="M83 616Q83 624 89 630T99 636Q107 636 253 568T543 431T687 361Q694 356 694 346T687 331Q685 329 395 192L107 56H101Q83 58 83 76Q83 77 83 79Q82 86 98 95Q117 105 248 167Q326 204 378 228L626 346L360 472Q291 505 200 548Q112 589 98 597T83 616ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mn" transform="translate(1784.6,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container>, where <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> is the parity bits, there is a code-word with block length <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="10.312ex" height="1.714ex" role="img" focusable="false" viewBox="0 -675.5 4557.9 757.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(877.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(1933.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(3057.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(4057.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> and message length <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="13.919ex" height="1.756ex" role="img" focusable="false" viewBox="0 -694 6152.3 776"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(798.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(1854.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2978.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3978.9,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4652.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(5652.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>. Hence the rate of Hamming codes is <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="25.165ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 11122.9 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mo" transform="translate(1036.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2092.6,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2613.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(3113.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3991.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(5047.1,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(5769.3,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(6769.6,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7220.6,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mo" transform="translate(7720.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(8109.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(9233.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(10233.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(10733.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, which is the highest possible for codes with minimum distance of three and block length <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.937ex" height="1.714ex" role="img" focusable="false" viewBox="0 -675.5 2624.3 757.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1124.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2124.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>. When <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> is very large enough, almost all the bits in the Hamming code are transmitted.</p><p>Here is an example, for <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.169ex" height="1.69ex" role="img" focusable="false" viewBox="0 -665 2284.6 747"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(728.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1784.6,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container>, the Hamming code has <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.506ex" height="1.715ex" role="img" focusable="false" viewBox="0 -676 2433.6 758"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(877.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1933.6,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.327ex" height="1.756ex" role="img" focusable="false" viewBox="0 -694 2354.6 776"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(798.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1854.6,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></svg></mjx-container>. In the 7 bits of the Hamming code, 4 bits are the message we wanted to transmit, the rest 3 bits are parity bits which protects the message. In 1950, Hamming introduced this [7, 4] Hamming code, it encodes four data bits into seven bits by adding three parity bits.</p><p> consists of 4 data bits, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="11.675ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 5160.2 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(956.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1401.2,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2357.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2802.4,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(3759,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(4203.7,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container>, and 3 parity bits, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="8.389ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 3708 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(939.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1384.2,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2323.8,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(2768.4,0)"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container>. As is shown in the following graphical depiction, the parity bit <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="2.126ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 939.6 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></svg></mjx-container> applies to data bits <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="5.334ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 2357.8 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(956.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1401.2,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container> and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.164ex" height="1.91ex" role="img" focusable="false" viewBox="0 -694 956.6 844"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container>, the parity bit <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="2.126ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 939.6 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container> applies to the data bits <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="5.334ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 2357.8 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(956.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1401.2,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container>, and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.164ex" height="1.91ex" role="img" focusable="false" viewBox="0 -694 956.6 844"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container>, the parity bit <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="2.126ex" height="1.439ex" role="img" focusable="false" viewBox="0 -442 939.6 636"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mn" transform="translate(536,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container> applies to the data bits <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="5.334ex" height="2.009ex" role="img" focusable="false" viewBox="0 -694 2357.8 888"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(956.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msub" transform="translate(1401.2,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></g></svg></mjx-container>, and <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.339ex;" xmlns="http://www.w3.org/2000/svg" width="2.164ex" height="1.91ex" role="img" focusable="false" viewBox="0 -694 956.6 844"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mn" transform="translate(553,-150) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container>. When there is no error in the bits, none of the parities will break.</p><p align="center"><img src="https://d3p3tllh95j94n.cloudfront.net/wellcome-to-louissrliu/Hamming.png" class="center">The Binary Hamming(7,4) code (with r = 3)</p><h3 id="Binary-Linear-Algebra"><a href="#Binary-Linear-Algebra" class="headerlink" title="Binary Linear Algebra"></a>Binary Linear Algebra</h3><p>The encoding and decoding of Hamming codes could be represented as linear block codes. The property of linearity is the sum of any two codewords is also a code word, and they are applied to the soruce bits in blocks. Let’s try to be the genius Richard Hamming in 1950s and come up with a generic Hamming code for different numbers of error-correction bits.</p><p>The number of parity bits <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>, and each parity bit is used only once in one parity. So there are <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> parities, and the number of different parity states that Hamming code could represent is <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="2.041ex" height="1.528ex" role="img" focusable="false" viewBox="0 -675.5 901.9 675.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></mjx-container>. One parity state has to represent the state that the code has no error. Each of the rest parity states has to represent the state that one unique bit has an error. The number of the rest parity states is <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.937ex" height="1.714ex" role="img" focusable="false" viewBox="0 -675.5 2624.3 757.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1124.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2124.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>, therefore, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> parity bits could be used for error-correcting codes up to <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="5.937ex" height="1.714ex" role="img" focusable="false" viewBox="0 -675.5 2624.3 757.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1124.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2124.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> bits. That’s why Hamming code has <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.02ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 451 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> number of error-correction bits, the block length <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="10.312ex" height="1.714ex" role="img" focusable="false" viewBox="0 -675.5 4557.9 757.5"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(877.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(1933.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(3057.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(4057.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> and message length <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="13.919ex" height="1.756ex" role="img" focusable="false" viewBox="0 -694 6152.3 776"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(798.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(1854.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2978.7,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(3978.9,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(4652.1,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(5652.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>.</p><h4 id="Construction-of-Generator-amp-Parity-check-Matrix"><a href="#Construction-of-Generator-amp-Parity-check-Matrix" class="headerlink" title="Construction of Generator & Parity-check Matrix"></a>Construction of Generator &amp; Parity-check Matrix</h4><p>Hamming code could be represented using (binary) linear algebra. Consider Hamming(7,4) code, the data bits could be represented using a column vector <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.09ex;" xmlns="http://www.w3.org/2000/svg" width="6.647ex" height="1.995ex" role="img" focusable="false" viewBox="0 -841.7 2938.1 881.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(797.8,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="msup" transform="translate(1742.6,0)"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mn" transform="translate(792,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container>, where</p><script type="math/tex; mode=display">d = \begin{bmatrix}        d_{1}  \\        d_{2}  \\        d_{3}  \\        d_{4}  \\    \end{bmatrix}</script><p>There are two matrics: generator matrix <strong>G</strong> and parity-check matrix <strong>H</strong> for linear block codes. The construction of <strong>G</strong> and <strong>H</strong> is in standard (or systematic) form:</p><p>The generator matrix of a linear (n, k) code:</p><script type="math/tex; mode=display">G \doteqdot (I_k | -A^T)</script><p>The parity-check matrix of a linear (n, k) code:</p><script type="math/tex; mode=display">H \doteqdot (A | I_{n-k})</script><p>Regardless of form, <strong>G</strong> and <strong>H</strong> also must satisfy:</p><p><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="9.25ex" height="2.09ex" role="img" focusable="false" viewBox="0 -841.7 4088.4 923.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D43B" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 219 683Q260 681 355 681Q389 681 418 681T463 682T483 682Q499 682 499 672Q499 670 497 658Q492 641 487 638H485Q483 638 480 638T473 638T464 637T455 637Q416 636 405 634T387 623Q384 619 355 500Q348 474 340 442T328 395L324 380Q324 378 469 378H614L615 381Q615 384 646 504Q674 619 674 627T617 637Q594 637 587 639T580 648Q580 650 582 660Q586 677 588 679T604 682Q609 682 646 681T740 680Q802 680 835 681T871 682Q888 682 888 672Q888 645 876 638H874Q872 638 869 638T862 638T853 637T844 637Q805 636 794 634T776 623Q773 618 704 340T634 58Q634 51 638 51Q646 48 692 46H723Q729 38 729 37T726 19Q722 6 716 0H701Q664 2 567 2Q533 2 504 2T458 2T437 1Q420 1 420 10Q420 15 423 24Q428 43 433 45Q437 46 448 46H454Q481 46 514 49Q520 50 522 50T528 55T534 64T540 82T547 110T558 153Q565 181 569 198Q602 330 602 331T457 332H312L279 197Q245 63 245 58Q245 51 253 49T303 46H334Q340 38 340 37T337 19Q333 6 327 0H312Q275 2 178 2Q144 2 115 2T69 2T48 1Q31 1 31 10Q31 12 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="msup" transform="translate(888,0)"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mi" transform="translate(819,363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mo" transform="translate(2532.6,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3588.4,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container>, an all-zeros matrix.</p><p>Encoding:</p><p>To encode the data bits <strong>d</strong>, the codeword <strong>x</strong> is given by the standard matrix product <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex;" xmlns="http://www.w3.org/2000/svg" width="8.58ex" height="2.09ex" role="img" focusable="false" viewBox="0 -841.7 3792.4 923.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(849.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msup" transform="translate(1905.6,0)"><g data-mml-node="mi"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z"></path></g><g data-mml-node="mi" transform="translate(819,363) scale(0.707)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g></g><g data-mml-node="mi" transform="translate(3272.4,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>, where the generator matrix <strong>G</strong> from is</p><script type="math/tex; mode=display">G^T = \begin{bmatrix}        1    & 1    & 0    & 1 \\        1    & 0    & 1    & 1 \\        1    & 0    & 0    & 0 \\        0    & 1    & 1    & 1 \\        0    & 1    & 0    & 0 \\        0    & 0    & 1    & 0 \\        0    & 0    & 0    & 1 \\    \end{bmatrix}</script><p>Note: the generator matrix <strong>G</strong> could be easily derived from the bit sequence and parity table.</p><p>The Hamming(7,4) encoded bits <strong>x</strong> would be</p><script type="math/tex; mode=display">x = G^Td  = \begin{bmatrix}        1    & 1    & 0    & 1 \\        1    & 0    & 1    & 1 \\        1    & 0    & 0    & 0 \\        0    & 1    & 1    & 1 \\        0    & 1    & 0    & 0 \\        0    & 0    & 1    & 0 \\        0    & 0    & 0    & 1 \\    \end{bmatrix}    \begin{bmatrix}        d_{1}  \\        d_{2}  \\        d_{3}  \\        d_{4}  \\    \end{bmatrix}  = \begin{bmatrix}        (d_{1} + d_{2} + d_{4}) mod 2  \\        (d_{2} + d_{3} + d_{4}) mod 2  \\        d_{1}  \\        (d_{2} + d_{3} + d_{4}) mod 2  \\        d_{2}  \\        d_{3}  \\        d_{4}  \\    \end{bmatrix}  = \begin{bmatrix}    p_{1} \\    p_{2} \\    d_{1} \\    p_{3} \\    d_{2} \\    d_{3} \\    d_{4}    \end{bmatrix}</script><p>Error Detection:</p><p>Suppose that the reveived data is <strong>x’</strong>, and <strong>x’</strong> may or may not equal to <strong>x</strong>, where</p><script type="math/tex; mode=display">H = \begin{bmatrix}        1    & 0    & 1    & 0   & 1   &0  & 1 \\        0    & 1    & 1    & 0   & 0   &1  & 1 \\        0    & 0    & 0    & 1   & 1   &1  & 1 \\    \end{bmatrix}</script><p>The property of <strong>H</strong> is that each column in <strong>H</strong> is actually binary index sequence, 1, 2, 3, etc. This property will be very useful for error correction.</p><p>Error Correction:</p><p>Suppose that the actual Hamming encoded code reveived would be</p><script type="math/tex; mode=display">x' = x + e_{i}</script><p>Thus, parity checking would just be</p><script type="math/tex; mode=display">z = Hx'  = H(x + e_{i})  = Hx + He_{i}  = 0 + He_{i}  = [1 \: 2 \: 3 \: 4 \: 5 \: 6 \: 7]_{10}e_{i}  = (i)_2</script><p>The resulting value would be non-zero if there is a bit error. In order to fix the bit error, just simply flip the bit value at address <strong>x</strong>.</p><p>Now, as you can see, the Hamming code could be derived from the bit sequence and parity table. The way Richard Hamming worked for error correction must be some mathematical motivations behind. However, I did not get time to reserach and explore. Thay’s why Richard Hamming was a famous mathematician but I am not. :)</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><p><a href="https://en.wikipedia.org/wiki/Hamming_code">Wiki: Hamming code</a></p></li><li><p><a href="https://en.wikipedia.org/wiki/Hamming_distance">Wiki: Hamming distance</a></p></li><li><p><a href="https://en.wikipedia.org/wiki/Error_detection_and_correction">Wiki: Error detection and correction</a></p></li><li><p><a href="https://en.wikipedia.org/wiki/List_of_mathematical_symbols_by_subject">Wiki: List of mathematical symbols by subject</a></p></li></ul><p>Thanks for reading! Feel free to leave the comments below or <a href="mailto:qazqazqaz850@gmail.com">email</a> to me. Any pieces of advice or discussions are always welcome. :)</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Either computer data storage or telecommunication, regardless of the data storages and transmission, is non-zero probabilities that the data could be changed while it’s being stored or transmitted. There is always a code-word with block length without free bit-errors. That means the data probably could be changed while it is being processed or transmitted. If the machine can’t locate the position of the error and correct it, the information might be lost forever.&lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    <category term="features" scheme="https://louissrliu.github.io/categories/louissrliu/features/"/>
    
    
    <category term="mathematics" scheme="https://louissrliu.github.io/tags/mathematics/"/>
    
    <category term="telecommunication" scheme="https://louissrliu.github.io/tags/telecommunication/"/>
    
  </entry>
  
  <entry>
    <title>Drawing with Mouse and Touch Events on HTML</title>
    <link href="https://louissrliu.github.io/2022/12/04/Drawing_with_mouse_and_touch_events_on_html/"/>
    <id>https://louissrliu.github.io/2022/12/04/Drawing_with_mouse_and_touch_events_on_html/</id>
    <published>2022-12-03T16:00:00.000Z</published>
    <updated>2022-12-12T13:34:46.684Z</updated>
    
    <content type="html"><![CDATA[<p>The HTML canvas can be used for sketching&#x2F;drawing either by mouse or by touch. In the <a href="https://louissrliu.github.io/2022/11/06/Drawing_with_mouse_events_on_html/" title="https://louissrliu.github.io/2022/11/06/Drawing_with_mouse_events_on_html/">previous post</a>, I quickly discuss how to use Canvas API to implement a canvas with mouse sketching. In this post, I would like to describe how go about implementing for sketching&#x2F;drawing by mouse and touch.</p><span id="more"></span><h2 id="Mouse-and-Touch-Canvas"><a href="#Mouse-and-Touch-Canvas" class="headerlink" title="Mouse and Touch Canvas"></a>Mouse and Touch Canvas</h2><p>The belowing canvas can be used with any devices that use mouse or touch screen:</p><div style="overflow-x:auto;">    <iframe src="/javascript/canvas/mouse_touch_canvas.html" style="width:60%; height:460px", title="add-default-marker"></iframe></div><h2 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h2><p>The source code was referring to <a href="https://developer.mozilla.org/en-US/docs/Web/API/Touch_events" title="https://developer.mozilla.org/en-US/docs/Web/API/Touch_events">Mozilla touch-based drawing</a> and was slightly modified with some feature enhancement.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#canvas_div &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    display: block;</span><br><span class="line">    margin-left: auto;</span><br><span class="line">    margin-right: auto;</span><br><span class="line">&#125;</span><br><span class="line">canvas &#123;</span><br><span class="line">  border: 2px solid black;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;canvas_div&quot; style=&quot;overflow-x: auto;&quot;&gt;</span><br><span class="line">&lt;canvas id=&quot;canvas&quot; width=&quot;700&quot; height=&quot;360&quot;&gt;&lt;/canvas&gt;</span><br><span class="line">&lt;button onclick=&quot;javascript:clearArea();return false;&quot;&gt;Clear Area&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">Line width : &lt;select id=&quot;selWidth&quot;&gt;</span><br><span class="line">    &lt;option value=&quot;5&quot; selected=&quot;selected&quot;&gt;5&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;7&quot;&gt;7&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;9&quot;&gt;9&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;11&quot;&gt;11&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;13&quot;&gt;13&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;15&quot;&gt;15&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">Color : &lt;select id=&quot;selColor&quot;&gt;</span><br><span class="line">    &lt;option value=&quot;black&quot;&gt;black&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;blue&quot; selected=&quot;selected&quot;&gt;blue&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;red&quot;&gt;red&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;green&quot;&gt;green&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;yellow&quot;&gt;yellow&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;gray&quot;&gt;gray&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// When true, moving the mouse draws on the canvas</span><br><span class="line">let isDrawing = false;</span><br><span class="line">let x = 0;</span><br><span class="line">let y = 0;</span><br><span class="line">var offsetX;</span><br><span class="line">var offsetY;</span><br><span class="line"></span><br><span class="line">const canvas = document.getElementById(&#x27;canvas&#x27;);</span><br><span class="line">const context = canvas.getContext(&#x27;2d&#x27;);</span><br><span class="line"></span><br><span class="line">function startup() &#123;</span><br><span class="line">  canvas.addEventListener(&#x27;touchstart&#x27;, handleStart);</span><br><span class="line">  canvas.addEventListener(&#x27;touchend&#x27;, handleEnd);</span><br><span class="line">  canvas.addEventListener(&#x27;touchcancel&#x27;, handleCancel);</span><br><span class="line">  canvas.addEventListener(&#x27;touchmove&#x27;, handleMove);</span><br><span class="line">  canvas.addEventListener(&#x27;mousedown&#x27;, (e) =&gt; &#123;</span><br><span class="line">    x = e.offsetX;</span><br><span class="line">    y = e.offsetY;</span><br><span class="line">    isDrawing = true;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  canvas.addEventListener(&#x27;mousemove&#x27;, (e) =&gt; &#123;</span><br><span class="line">    if (isDrawing) &#123;</span><br><span class="line">      drawLine(context, x, y, e.offsetX, e.offsetY);</span><br><span class="line">      x = e.offsetX;</span><br><span class="line">      y = e.offsetY;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  canvas.addEventListener(&#x27;mouseup&#x27;, (e) =&gt; &#123;</span><br><span class="line">    if(isDrawing) &#123;</span><br><span class="line">      drawLine(context, x, y, e.offsetX, e.offsetY);</span><br><span class="line">      x = 0;</span><br><span class="line">      y = 0;</span><br><span class="line">      isDrawing = false;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.addEventListener(&quot;DOMContentLoaded&quot;, startup);</span><br><span class="line"></span><br><span class="line">const ongoingTouches = [];</span><br><span class="line"></span><br><span class="line">function handleStart(evt) &#123;</span><br><span class="line">  evt.preventDefault();</span><br><span class="line">  const touches = evt.changedTouches;</span><br><span class="line">  offsetX = canvas.getBoundingClientRect().left;</span><br><span class="line">  offsetY = canvas.getBoundingClientRect().top;</span><br><span class="line">  for (let i = 0; i &lt; touches.length; i++) &#123;</span><br><span class="line">    ongoingTouches.push(copyTouch(touches[i]));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function handleMove(evt) &#123;</span><br><span class="line">  evt.preventDefault();</span><br><span class="line">  const touches = evt.changedTouches;</span><br><span class="line">  for (let i = 0; i &lt; touches.length; i++) &#123;</span><br><span class="line">    const color = document.getElementById(&#x27;selColor&#x27;).value;</span><br><span class="line">    const idx = ongoingTouchIndexById(touches[i].identifier);</span><br><span class="line">    if (idx &gt;= 0) &#123;</span><br><span class="line">      context.beginPath();</span><br><span class="line">      context.moveTo(ongoingTouches[idx].clientX - offsetX, ongoingTouches[idx].clientY - offsetY);</span><br><span class="line">      context.lineTo(touches[i].clientX - offsetX, touches[i].clientY - offsetY);</span><br><span class="line">      context.lineWidth = document.getElementById(&#x27;selWidth&#x27;).value;</span><br><span class="line">      context.strokeStyle = color;</span><br><span class="line">      context.lineJoin = &quot;round&quot;;</span><br><span class="line">      context.closePath();</span><br><span class="line">      context.stroke();</span><br><span class="line">      ongoingTouches.splice(idx, 1, copyTouch(touches[i])); // swap in the new touch record</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function handleEnd(evt) &#123;</span><br><span class="line">  evt.preventDefault();</span><br><span class="line">  const touches = evt.changedTouches;</span><br><span class="line">  for (let i = 0; i &lt; touches.length; i++) &#123;</span><br><span class="line">    const color = document.getElementById(&#x27;selColor&#x27;).value;</span><br><span class="line">    let idx = ongoingTouchIndexById(touches[i].identifier);</span><br><span class="line"></span><br><span class="line">    if (idx &gt;= 0) &#123;</span><br><span class="line">      context.lineWidth = document.getElementById(&#x27;selWidth&#x27;).value;</span><br><span class="line">      context.fillStyle = color;</span><br><span class="line">      ongoingTouches.splice(idx, 1); // remove it; we&#x27;re done</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function handleCancel(evt) &#123;</span><br><span class="line">  evt.preventDefault();</span><br><span class="line">  const touches = evt.changedTouches;</span><br><span class="line">  for (let i = 0; i &lt; touches.length; i++) &#123;</span><br><span class="line">    let idx = ongoingTouchIndexById(touches[i].identifier);</span><br><span class="line">    ongoingTouches.splice(idx, 1); // remove it; we&#x27;re done</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function copyTouch(&#123; identifier, clientX, clientY &#125;) &#123;</span><br><span class="line">  return &#123; identifier, clientX, clientY &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function ongoingTouchIndexById(idToFind) &#123;</span><br><span class="line">  for (let i = 0; i &lt; ongoingTouches.length; i++) &#123;</span><br><span class="line">    const id = ongoingTouches[i].identifier;</span><br><span class="line">    if (id === idToFind) &#123;</span><br><span class="line">      return i;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return -1; // not found</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function drawLine(context, x1, y1, x2, y2) &#123;</span><br><span class="line">  context.beginPath();</span><br><span class="line">  context.strokeStyle = document.getElementById(&#x27;selColor&#x27;).value;</span><br><span class="line">  context.lineWidth = document.getElementById(&#x27;selWidth&#x27;).value;</span><br><span class="line">  context.lineJoin = &quot;round&quot;;</span><br><span class="line">  context.moveTo(x1, y1);</span><br><span class="line">  context.lineTo(x2, y2);</span><br><span class="line">  context.closePath();</span><br><span class="line">  context.stroke();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function clearArea() &#123;</span><br><span class="line">    context.setTransform(1, 0, 0, 1, 0, 0);</span><br><span class="line">    context.clearRect(0, 0, context.canvas.width, context.canvas.height);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>Note:<br>Touch events are similar to mouse events except they support simultaneous touches and at different locations on the touch surface. This example was extended the functionality of mouse events with touch events, which uses ongoingTouches array for the track of the touches in-progress. When a touchstrat event occurs, indicating that a new touch on the surface has occurred. After drawing the line, we call the array.splice() to replace the previous information about the touchpoint with the current information into ongoingTouches array.</p><h2 id="Refereence"><a href="#Refereence" class="headerlink" title="Refereence"></a>Refereence</h2><ul><li><p><a href="https://github.com/mdn/content/blob/main/files/en-us/web/api/touch_events/index.md?plain=1">Github: Touch events API</a></p></li><li><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Touch_events">Mozilla Touch events</a></p></li></ul><p>Thanks for reading! Feel free to leave the comments below or <a href="mailto:qazqazqaz850@gmail.com">email</a> to me. Any pieces of advice or discussions are always welcome. :)</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;The HTML canvas can be used for sketching&amp;#x2F;drawing either by mouse or by touch. In the &lt;a href=&quot;https://louissrliu.github.io/2022/11/06/Drawing_with_mouse_events_on_html/&quot; title=&quot;https://louissrliu.github.io/2022/11/06/Drawing_with_mouse_events_on_html/&quot;&gt;previous post&lt;/a&gt;, I quickly discuss how to use Canvas API to implement a canvas with mouse sketching. In this post, I would like to describe how go about implementing for sketching&amp;#x2F;drawing by mouse and touch.&lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    <category term="miscellaneous" scheme="https://louissrliu.github.io/categories/louissrliu/miscellaneous/"/>
    
    
    <category term="html" scheme="https://louissrliu.github.io/tags/html/"/>
    
    <category term="javascript" scheme="https://louissrliu.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>生活札記 飛龍池步道健行</title>
    <link href="https://louissrliu.github.io/2022/11/19/%E7%94%9F%E6%B4%BB%E6%89%8E%E8%A8%98-%E9%A3%9B%E9%BE%8D%E6%B1%A0%E6%AD%A5%E9%81%93%E5%81%A5%E8%A1%8C/"/>
    <id>https://louissrliu.github.io/2022/11/19/%E7%94%9F%E6%B4%BB%E6%89%8E%E8%A8%98-%E9%A3%9B%E9%BE%8D%E6%B1%A0%E6%AD%A5%E9%81%93%E5%81%A5%E8%A1%8C/</id>
    <published>2022-11-18T16:00:00.000Z</published>
    <updated>2022-11-19T11:10:00.654Z</updated>
    
    <content type="html"><![CDATA[<p>這週末來到位於新竹縣新埔鎮的<a href="https://hiking.biji.co/index.php?q=trail&act=detail&id=1663" title="https://hiking.biji.co/index.php?q=trail&amp;act=detail&amp;id=1663">飛龍池登山步道</a>輕鬆健行。這區域內的步道蜿蜒圍繞著山區，古道串連著龍頭公園、忘憂谷、運動公園、三聖宮、採茶古道….。從新竹高鐵區開車到這，距離不遠，人潮也沒有很多，幽靜宜人，而且該區域並不需要申請以及預約即可進入，所以適合週末安排的時段前來健行。</p><span id="more"></span><h3 id="沿路風景"><a href="#沿路風景" class="headerlink" title="沿路風景"></a>沿路風景</h3><p>顯著的路標</p><div class="figure " style="width:;"><img class="fig-img" src="https://d3p3tllh95j94n.cloudfront.net/wellcome-to-louissrliu/signboard.jpeg" alt=""></div><p>飛龍池步道</p><div class="figure " style="width:;"><img class="fig-img" src="https://d3p3tllh95j94n.cloudfront.net/wellcome-to-louissrliu/trail.jpeg" alt=""></div><p>飛龍池</p><div class="figure " style="width:;"><img class="fig-img" src="https://d3p3tllh95j94n.cloudfront.net/wellcome-to-louissrliu/pond.jpeg" alt=""></div><p>陽光普照</p><div class="figure " style="width:;"><img class="fig-img" src="https://d3p3tllh95j94n.cloudfront.net/wellcome-to-louissrliu/shrubbery.jpeg" alt=""></div><p>艷陽和樹林相望</p><div class="figure " style="width:;"><img class="fig-img" src="https://d3p3tllh95j94n.cloudfront.net/wellcome-to-louissrliu/pathlet.jpeg" alt=""></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;這週末來到位於新竹縣新埔鎮的&lt;a href=&quot;https://hiking.biji.co/index.php?q=trail&amp;act=detail&amp;id=1663&quot; title=&quot;https://hiking.biji.co/index.php?q=trail&amp;amp;act=detail&amp;amp;id=1663&quot;&gt;飛龍池登山步道&lt;/a&gt;輕鬆健行。這區域內的步道蜿蜒圍繞著山區，古道串連著龍頭公園、忘憂谷、運動公園、三聖宮、採茶古道….。從新竹高鐵區開車到這，距離不遠，人潮也沒有很多，幽靜宜人，而且該區域並不需要申請以及預約即可進入，所以適合週末安排的時段前來健行。&lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    
    <category term="life" scheme="https://louissrliu.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Drawing with Mouse Events on HTML</title>
    <link href="https://louissrliu.github.io/2022/11/06/Drawing_with_mouse_events_on_html/"/>
    <id>https://louissrliu.github.io/2022/11/06/Drawing_with_mouse_events_on_html/</id>
    <published>2022-11-05T16:00:00.000Z</published>
    <updated>2022-12-03T10:12:06.932Z</updated>
    
    <content type="html"><![CDATA[<p>The HTML canvas can be used for sketching&#x2F;drawing by mouse. The canvas API provides a means for drawing graphics via JavaScript and the HTML element. It largely focuses on 2D graphics. In this post, I would like to describe how to quickly go about implementing this.</p><span id="more"></span><h2 id="Mouse-Canvas"><a href="#Mouse-Canvas" class="headerlink" title="Mouse Canvas"></a>Mouse Canvas</h2><p>The mouse canvas can be used with any devices (desktop computer&#x2F;laptop..) that use mouse. Belowing is the simple example:</p><div style="overflow-x:auto;">    <iframe src="/javascript/canvas/mouse_canvas.html" style="width:100%; height:360px", title="add-default-marker"></iframe></div><h2 id="Source-Code"><a href="#Source-Code" class="headerlink" title="Source Code"></a>Source Code</h2><p>The source code was referring to <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/mousemove_event" title="https://developer.mozilla.org/en-US/docs/Web/API/Element/mousemove_event">Mozilla mouse drawing mousemove</a> with clear&#x2F;line width&#x2F;color features enhancement.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">// CSS Style</span><br><span class="line">&lt;style&gt;</span><br><span class="line">#canvas_div &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    display: block;</span><br><span class="line">    margin-left: auto;</span><br><span class="line">    margin-right: auto;</span><br><span class="line">&#125;</span><br><span class="line">canvas &#123;</span><br><span class="line">  border: 2px solid black;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;canvas_div&quot; style=&quot;overflow-x: auto;&quot;&gt;</span><br><span class="line">&lt;canvas id=&quot;canvas&quot; width=&quot;900&quot; height=&quot;360&quot;&gt;&lt;/canvas&gt;</span><br><span class="line"></span><br><span class="line">&lt;button onclick=&quot;javascript:clearArea();return false;&quot;&gt;Clear Area&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">Line width : &lt;select id=&quot;selWidth&quot;&gt;</span><br><span class="line">    &lt;option value=&quot;11&quot;&gt;11&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;13&quot; selected=&quot;selected&quot;&gt;13&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;15&quot;&gt;15&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line"></span><br><span class="line">Color : &lt;select id=&quot;selColor&quot;&gt;</span><br><span class="line">    &lt;option value=&quot;black&quot;&gt;black&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;blue&quot; selected=&quot;selected&quot;&gt;blue&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;red&quot;&gt;red&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;green&quot;&gt;green&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;yellow&quot;&gt;yellow&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;gray&quot;&gt;gray&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// When true, moving the mouse draws on the canvas</span><br><span class="line">let isDrawing = false;</span><br><span class="line">let x = 0;</span><br><span class="line">let y = 0;</span><br><span class="line"></span><br><span class="line">const canvas = document.getElementById(&#x27;canvas&#x27;);</span><br><span class="line">const context = canvas.getContext(&#x27;2d&#x27;);</span><br><span class="line"></span><br><span class="line">// event.offsetX, event.offsetY gives the (x,y) offset from the edge of the canvas.</span><br><span class="line"></span><br><span class="line">// Add the event listeners for mousedown, mousemove, and mouseup</span><br><span class="line">canvas.addEventListener(&#x27;mousedown&#x27;, (e) =&gt; &#123;</span><br><span class="line">  x = e.offsetX;</span><br><span class="line">  y = e.offsetY;</span><br><span class="line">  isDrawing = true;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">canvas.addEventListener(&#x27;mousemove&#x27;, (e) =&gt; &#123;</span><br><span class="line">  if (isDrawing) &#123;</span><br><span class="line">    drawLine(context, x, y, e.offsetX, e.offsetY);</span><br><span class="line">    x = e.offsetX;</span><br><span class="line">    y = e.offsetY;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">canvas.addEventListener(&#x27;mouseup&#x27;, (e) =&gt; &#123;</span><br><span class="line">  if (isDrawing) &#123;</span><br><span class="line">    drawLine(context, x, y, e.offsetX, e.offsetY);</span><br><span class="line">    x = 0;</span><br><span class="line">    y = 0;</span><br><span class="line">    isDrawing = false;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">function drawLine(context, x1, y1, x2, y2) &#123;</span><br><span class="line">  context.beginPath();</span><br><span class="line">  context.strokeStyle = document.getElementById(&#x27;selColor&#x27;).value;</span><br><span class="line">  context.lineWidth = document.getElementById(&#x27;selWidth&#x27;).value;</span><br><span class="line">  context.lineJoin = &quot;round&quot;;</span><br><span class="line">  context.moveTo(x1, y1);</span><br><span class="line">  context.lineTo(x2, y2);</span><br><span class="line">  context.closePath();</span><br><span class="line">  context.stroke();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function clearArea() &#123;</span><br><span class="line">    context.setTransform(1, 0, 0, 1, 0, 0);</span><br><span class="line">    context.clearRect(0, 0, context.canvas.width, context.canvas.height);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/mousemove_event">Mozilla: Element: mousemove event</a></li></ul><p>Thanks for reading! Feel free to leave the comments below or <a href="mailto:qazqazqaz850@gmail.com">email</a> to me. Any pieces of advice or discussions are always welcome. :)</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;The HTML canvas can be used for sketching&amp;#x2F;drawing by mouse. The canvas API provides a means for drawing graphics via JavaScript and the HTML element. It largely focuses on 2D graphics. In this post, I would like to describe how to quickly go about implementing this.&lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    <category term="miscellaneous" scheme="https://louissrliu.github.io/categories/louissrliu/miscellaneous/"/>
    
    
    <category term="html" scheme="https://louissrliu.github.io/tags/html/"/>
    
    <category term="javascript" scheme="https://louissrliu.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>生活扎記 蟹堡王餐廳 Krusty Krab</title>
    <link href="https://louissrliu.github.io/2022/10/08/%E7%94%9F%E6%B4%BB%E6%9C%AD%E8%A8%98-%E6%B5%B7%E7%B6%BF%E5%AF%B6%E5%AF%B6%E8%9F%B9%E5%A0%A1%E7%8E%8B%E9%A4%90%E5%BB%B3_SpongeBob_SquarePants/"/>
    <id>https://louissrliu.github.io/2022/10/08/%E7%94%9F%E6%B4%BB%E6%9C%AD%E8%A8%98-%E6%B5%B7%E7%B6%BF%E5%AF%B6%E5%AF%B6%E8%9F%B9%E5%A0%A1%E7%8E%8B%E9%A4%90%E5%BB%B3_SpongeBob_SquarePants/</id>
    <published>2022-10-07T16:00:00.000Z</published>
    <updated>2022-10-08T10:24:46.629Z</updated>
    
    <content type="html"><![CDATA[<p>“After going on your life-changing journey, you now realize that you don’t want what you thought you wanted. What you really wanted was inside you all along.”</p><span id="more"></span><p>生活中不經意回顧起海綿寶寶的這部動畫。現在回想起來，當時還是大學的我，偶爾利用空閒時間看幾部動畫，放鬆心情。隨著年紀漸長，漸漸意識到自己的性格逐漸與章魚哥相似，自命不凡、憤世嫉俗，（但內心保有一絲善良？。事實上關於<a href="https://www.dcard.tw/f/funny/p/232128954" title="https://www.dcard.tw/f/funny/p/232128954">長大才發現 自己越來越像章魚哥</a>此議題，有不少人已經討論過，至於章魚哥的故事，可能以後有機會再多談吧。這篇生活扎記簡單聊聊的是&lt;&lt;海綿寶寶&gt;&gt;蟹堡王和現實中的漢堡王。</p><div class="video-container"><iframe src="https://www.youtube.com/embed/HOBDzc1ME5M" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p>&lt;&lt;海綿寶寶&gt;&gt;講述一段故事，動畫中所有的居民都喜歡吃蟹黃堡(Krusty Patty)，但蟹堡王餐廳旗下的員工章魚哥起初認為蟹黃堡就是垃圾食品，無論海綿寶寶如何說服章魚哥品嚐看看，還是堅決拒絕。然而自從章魚哥吃了一次蟹黃堡之後，也沒有逃得過真香定律。雖然嘴上說不願意吃，但是內心仍覺得蟹黃堡很好吃，恨不得多吃幾個。</p><p align="center"><img src="https://d3p3tllh95j94n.cloudfront.net/wellcome-to-louissrliu/squidward_buger.jpeg" class="center"></p><p>蟹堡王餐廳影射到現實中的速食店是美國知名跨國連鎖漢堡王(Buger King)。而漢堡王最著名的菜單就是經典的火烤華堡&#x2F;辣味華堡(WHOPPER&#x2F;SPICY WHOPPER)，暢銷65年深受民眾喜歡。然而起初我卻對於WHOPPER不怎麼感興趣，一般而言，我頂多吃麥當勞或是肯德基的漢堡，覺得漢堡不過就是兩片麵包加點生菜番茄，中間再夾肉片，再多撒點醬汁僅此而已。除此之外，我也吃過一般早餐店的漢堡，口感以及風味也是雷同，對於漢堡的評價一直保持一般的水平，所以一直以來，專攻漢堡的漢堡王對我而言沒有什麼吸引力，也沒去過漢堡王點過餐點。</p><p>不過，前一陣子一次偶然的機會，路途經過漢堡王點了WHOPPER套餐，吃了一口後，在我身上再次驗證真香定律。感覺專攻漢堡的漢堡王的風味確實與麥當勞或肯德基有所差異，漢堡很香，肉汁很多，火烤的牛肉口感紮實，吃過後感覺打開了新世界的大門。從那次之後，我時不時會將漢堡王列入正餐的口袋清單中。哪天我將漢堡王所有系列的漢堡都品嚐過，說不定會再來寫個食記文什麼的。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;“After going on your life-changing journey, you now realize that you don’t want what you thought you wanted. What you really wanted was inside you all along.”&lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    <category term="miscellaneous" scheme="https://louissrliu.github.io/categories/louissrliu/miscellaneous/"/>
    
    
    <category term="food" scheme="https://louissrliu.github.io/tags/food/"/>
    
    <category term="life" scheme="https://louissrliu.github.io/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>Embed MapLibre Map for Website</title>
    <link href="https://louissrliu.github.io/2022/09/28/embed_maplibre_map_for_website/"/>
    <id>https://louissrliu.github.io/2022/09/28/embed_maplibre_map_for_website/</id>
    <published>2022-09-27T16:00:00.000Z</published>
    <updated>2022-11-06T03:48:11.005Z</updated>
    
    <content type="html"><![CDATA[<p>In our daily life, most of us usually use <a href="https://www.google.com/maps/" title="https://www.google.com/maps/">Google Map</a> or <a href="https://www.apple.com/maps/" title="https://www.apple.com/maps/">Apple Maps</a> to help us to navigate to a place. We can see traffic info, public transit and also choose our mode of transportation. </p><span id="more"></span><p>Recently, I was looking for ways to embed a Map to my website that contains multiples of custom locations. There are varieties of technologies to choose, such as <a href="https://aws.amazon.com/location/?nc1=h_ls" title="https://aws.amazon.com/location/?nc1=h_ls">Amaxon location service</a>, <a href="https://developers.google.com/maps" title="https://developers.google.com/maps">Google Map API</a> and <a href="https://github.com/maplibre/maplibre-gl-js" title="https://github.com/maplibre/maplibre-gl-js">MapLibre GL JS</a>, etc. In this post, I would like to discuss how to use <a href="https://github.com/maplibre/maplibre-gl-js" title="https://github.com/maplibre/maplibre-gl-js">MapLibre GL JS</a> to embed and create custom dynamic maps on our websites mostly for free.</p><h3 id="MapLibre-GL-JS"><a href="#MapLibre-GL-JS" class="headerlink" title="MapLibre GL JS"></a>MapLibre GL JS</h3><p><a href="https://github.com/maplibre/maplibre-gl-js" title="https://github.com/maplibre/maplibre-gl-js">MapLibre GL JS</a> is an open-source library for publishing maps on your websites. The maps uses vector tileset source over GeoJSON data soruces when possible and are fast rendering in browser has become possible thanks to GPU. </p><h3 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h3><p>Before begining shortly, we have to register an account in <a href="https://www.maptiler.com/" title="https://www.maptiler.com/">Maptiler</a>, get an default API Key to protect which is used for accessing maps, tiles, and data from your account. Then, using the API key in code is shown below.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=&quot;utf-8&quot; /&gt;</span><br><span class="line">&lt;title&gt;Add a default marker&lt;/title&gt;</span><br><span class="line">&lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1,maximum-scale=1,user-scalable=no&quot; /&gt;</span><br><span class="line">&lt;script src=&quot;https://unpkg.com/maplibre-gl@2.4.0/dist/maplibre-gl.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;link href=&quot;https://unpkg.com/maplibre-gl@2.4.0/dist/maplibre-gl.css&quot; rel=&quot;stylesheet&quot; /&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">body &#123; margin: 0; padding: 0; &#125;</span><br><span class="line">#map &#123; position: absolute; top: 0; bottom: 0; width: 100%; &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;map&quot;&gt;&lt;/div&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">var map = new maplibregl.Map(&#123;</span><br><span class="line">    container: &#x27;map&#x27;,</span><br><span class="line">    style:</span><br><span class="line">    &#x27;https://api.maptiler.com/maps/streets/style.json?key=YOUR_OWN_MAPTILER_API&#x27;,</span><br><span class="line">    center: [12.550343, 55.665957],</span><br><span class="line">    zoom: 8</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">var marker = new maplibregl.Marker()</span><br><span class="line">    .setLngLat([12.550343, 55.665957])</span><br><span class="line">    .addTo(map);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>Futher copy the code, paste it into your favorite text editor, and save it as .html file. (remember to replace YOUR_OWN_MAPTILER_API with your actual API key). Next, we can ues iframe for integration with the post.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;overflow-x:auto;&quot;&gt;</span><br><span class="line">    &lt;iframe src=&quot;/javascript/maplibre/add-default-marker.html&quot; style=&quot;width:100%; height:512px&quot;, title=&quot;add-default-marker&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="Simple-Example"><a href="#Simple-Example" class="headerlink" title="Simple Example"></a>Simple Example</h3><p>The embedded map for this simple example looks like this.</p><div style="overflow-x:auto;">    <iframe src="/javascript/maplibre/add-default-marker.html" style="width:100%; height:512px", title="add-default-marker"></iframe></div><h3 id="Custom-Example"><a href="#Custom-Example" class="headerlink" title="Custom Example"></a>Custom Example</h3><p>We can also customize the marker to a Map. Similar to the above example, I created another custom example map with marked places where I have visited recently nearby.</p><div style="overflow-x:auto;">    <iframe src="/javascript/maplibre/add-custom-marker.html" style="width:100%; height:512px", title="add-custom-marker"></iframe></div><p>Now, we know how to simply embed the custom dynamic maps on our websites. Hope this post will be helpful.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><p><a href="https://developers.google.com/maps">Google Maps Platform</a></p></li><li><p><a href="https://github.com/maplibre/maplibre-gl-js">Open-source library - MapLibre GL JS</a></p></li><li><p><a href="https://docs.mapbox.com/help/glossary/vector-tiles/">Mapbox Docs - vector tiles</a></p></li><li><p><a href="https://docs.mapbox.com/help/troubleshooting/mapbox-gl-js-performance/">Mapbox Docs - Improve the performance of Mapbox GL JS maps</a></p></li></ul><p>Thanks for reading! Feel free to leave the comments below or <a href="mailto:qazqazqaz850@gmail.com">email</a> to me. Any pieces of advice or discussions are always welcome. :)</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;In our daily life, most of us usually use &lt;a href=&quot;https://www.google.com/maps/&quot; title=&quot;https://www.google.com/maps/&quot;&gt;Google Map&lt;/a&gt; or &lt;a href=&quot;https://www.apple.com/maps/&quot; title=&quot;https://www.apple.com/maps/&quot;&gt;Apple Maps&lt;/a&gt; to help us to navigate to a place. We can see traffic info, public transit and also choose our mode of transportation. &lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    <category term="features" scheme="https://louissrliu.github.io/categories/louissrliu/features/"/>
    
    
    <category term="javascript" scheme="https://louissrliu.github.io/tags/javascript/"/>
    
    <category term="map" scheme="https://louissrliu.github.io/tags/map/"/>
    
  </entry>
  
  <entry>
    <title>閱讀心得 POOR CHARlIE&#39;s ALMANACK - 保證生活悲慘的處方</title>
    <link href="https://louissrliu.github.io/2022/09/01/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97-%E7%AA%AE%E6%9F%A5%E7%90%86%E7%9A%84%E6%99%AE%E9%80%9A%E5%B8%B8%E8%AD%98/"/>
    <id>https://louissrliu.github.io/2022/09/01/%E9%96%B1%E8%AE%80%E5%BF%83%E5%BE%97-%E7%AA%AE%E6%9F%A5%E7%90%86%E7%9A%84%E6%99%AE%E9%80%9A%E5%B8%B8%E8%AD%98/</id>
    <published>2022-08-31T16:00:00.000Z</published>
    <updated>2022-10-08T04:44:36.846Z</updated>
    
    <content type="html"><![CDATA[<p>“Most players gain pleasure from feeling accepted or belonging to the group. The good  player however, gains pleasure from his ability to cope with the realities of the game”</p><span id="more"></span><h2 id="書單"><a href="#書單" class="headerlink" title="書單"></a>書單</h2><p><a href="https://www.amazon.com/Poor-Charlies-Almanack-Charles-Chinese/dp/986777857X/ref=sr_1_1?crid=1948DCYL84FUG&keywords=Poor+Charlie%27s+Almanack:+The+Wit+and+Wisdom+of+Charles+T.+Munger+(Chinese+Edition)&qid=1662039083&sprefix=poor+charlie%27s+almanack+the+wit+and+wisdom+of+charles+t.+munger+chinese+edition+,aps,228&sr=8-1" title="https://www.amazon.com/Poor-Charlies-Almanack-Charles-Chinese/dp/986777857X/ref=sr_1_1?crid=1948DCYL84FUG&amp;keywords=Poor+Charlie%27s+Almanack%3A+The+Wit+and+Wisdom+of+Charles+T.+Munger+%28Chinese+Edition%29&amp;qid=1662039083&amp;sprefix=poor+charlie%27s+almanack+the+wit+and+wisdom+of+charles+t.+munger+chinese+edition+%2Caps%2C228&amp;sr=8-1">Poor Charlie’s Almanack: The Wit and Wisdom of Charles T. Munger</a> 這本書在Amazon 3.5 顆星。</p><p>此書內容收錄查理蒙格的人生哲學、學習方法、決策過程以及投資策略。查理蒙格鼓吹用逆向思維的方式來洞察問題的本質，將問題反過來想，才能得到最好的解決。例如，當年幾乎所有人都在試圖修正麥斯威爾電磁定律，使其符合牛頓的三大運動定律，然而愛因斯坦卻轉了個一百八十度大彎，修正了牛頓的定律，讓其符合麥斯威爾的定律，結果發明了相對論。致力於尋求證據來否定已有的論點，反過來想，總是反過來想，這樣反論性的思維值得反覆玩味與體會的。以下就節錄印象最深刻的幾段經典段落。</p><h2 id="紀錄與心得"><a href="#紀錄與心得" class="headerlink" title="紀錄與心得"></a>紀錄與心得</h2><p>保證生活悲慘的處方:<ol><li><a href="#毒品">為了改變心情或感受而吸食毒品</a></li><li><a href="#嫉妒">嫉妒</a></li><li><a href="#怨恨">怨恨</a></li><li><a href="#反覆無常">要反復無常，不要虔誠的做你正在做的事</a></li><li><a href="#教訓">盡可能從你自身的經驗獲得知識，盡量別從其他人成功或失敗的經驗中廣泛的吸取教訓</a></li><li><a href="#成果">別去鑽研前輩的最好成果</a></li><li><a href="#挫折">當遭遇挫折時，就請意志消沉，從此一蹶不振吧</a></li><li><a href="#故事">請忽略小時候人們告訴我那個鄉下人的故事</a></li></ol></p><p><a name="毒品">為了改變心情或感受而吸食毒品</a></p><p>每個人都有可能在一個剛開始難以察覺的細微過程中，染上毒癮，直到墮落的力量大到再也無法衝破。</p><p><a name="嫉妒">嫉妒</a></p><p>嫉妒和令人上癮的毒品一樣，也能獲得導致悲慘生活的大獎。關心別人賺錢比自己更快是一種致命的罪。嫉妒是一種愚蠢的罪，是唯一一種可能得到任何樂趣的罪行，只會讓人痛苦不堪，不會帶來任何樂趣，為何要嫉妒呢?</p><p><a name="怨恨">怨恨</a></p><p>對於想過悲慘生活的人建議別去實踐狄斯雷利的權宜之計，這是專為無法戒掉怨恨習慣的人所設計的。狄斯雷利在成為英國首相過程中，學會了不讓報復成為行為的動機，就將敵人的名字寫下來，放在抽屜裡，然後時常翻看這些名子，字得其樂的記錄下世界是怎樣無需他插手，就使他的敵人垮掉的。</p><p><a name="反覆無常">要反復無常，不要虔誠的做你正在做的事</a></p><p>只要養成反覆無常無常的習慣，就能綽綽有餘抵銷所有優點帶來的效應，不管那種效應有多大。如果你不喜歡不受信任，並且不打算成為對人類最有貢獻的一群人，那麼這帖藥最適合。如果不服用這帖藥，即使你最初的條件並不好，可能還不容易過上悲慘的生活。</p><p><a name="教訓">盡可能從你自身的經驗獲得知識，盡量別從其他人成功或失敗的經驗中廣泛的吸取教訓</a></p><p>這帖藥肯定能保證你過上悲慘的生活，取得二流的成就。拒不別人的教訓所造成的後果，通常是最沒創意的錯誤而引起的麻煩道路。如果你起步時沒成功，你的滑翔遊戲也就玩完了。我們賺錢，靠的是記住淺顯的，而不是掌握深奧的。我們從不試圖成為非常聰明的人，而是持續避免讓自己變成蠢貨，久而久之，我們這種人便能獲得非常大的優勢。</p><p><a name="成果">別去鑽研前輩的最好成果</a></p><p>這帖藥的功效在於得到盡可能少的教育。</p><p><a name="挫折">當遭遇挫折時，就請意志消沉，從此一蹶不振吧</a></p><p>即使最幸福、聰明的人，也會遇到許許多多失敗，這帖藥必定能保證你永遠深陷痛苦的泥濘中。</p><p><a name="故事">請忽略小時候人們告訴我那個鄉下人的故事</a></p><p>請忽略鄉下人的故事：曾經有鄉下人說”我只想知道我將來會死在什麼地方，這樣我就可以永遠不去那裡”。若想獲得失敗，應該將這鄉下人的方法，貶為愚蠢之極、一無用處。</p><div class="alert info"><p>“如果你在生活中唯一的成功就是透過買股票發財，那麼這是一種失敗的生活；生活不僅僅是精明的累積財富。生活和事業上的成功，大多來自你知道應該避免哪些事情；死得太早、糟糕的婚姻、或是避免邪惡之人，尤其是性感誘人的異性等等。”</p></div><h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>個人認爲查理類似說反話的思維以及人生智慧，展現了獨特的洞見。這些無與倫比的智慧以及經驗就是一本很好的教材。但願在漫長的人生中，日日以避免失敗為目標而成長。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;“Most players gain pleasure from feeling accepted or belonging to the group. The good  player however, gains pleasure from his ability to cope with the realities of the game”&lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    <category term="features" scheme="https://louissrliu.github.io/categories/louissrliu/features/"/>
    
    
    <category term="chinese" scheme="https://louissrliu.github.io/tags/chinese/"/>
    
    <category term="reading" scheme="https://louissrliu.github.io/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>A Beginner&#39;s Guide - Git Handbook</title>
    <link href="https://louissrliu.github.io/2018/10/02/Git-Handbook/"/>
    <id>https://louissrliu.github.io/2018/10/02/Git-Handbook/</id>
    <published>2018-10-01T16:00:00.000Z</published>
    <updated>2022-09-01T12:42:30.569Z</updated>
    
    <content type="html"><![CDATA[<p>Due to the most time on my job, we need to type many git command lines. So that this article is used to sort several git commands frequently used for easily searching.</p><span id="more"></span><h2 id="Intorduction"><a href="#Intorduction" class="headerlink" title="Intorduction"></a>Intorduction</h2><p>Git is one of a distributed version control system (DVCS) commonly used for open source and commercial software development with significant benefit for individuals, teams and businesses. DVCS allows full access to every file, branches, and interation of project. Unlike once popular centralized version control system, such as perforce, DVCS don’t need a constant connection to a central repository. Developers can work anywhere and collaborate asynchronously from any time zone.</p><h2 id="Basic-Git-Commands"><a href="#Basic-Git-Commands" class="headerlink" title="Basic Git Commands"></a>Basic Git Commands</h2><h3 id="Set-your-Name-and-Email-in-Git"><a href="#Set-your-Name-and-Email-in-Git" class="headerlink" title="Set your Name and Email in Git"></a>Set your Name and Email in Git</h3><p>Before working with Git on the command line, there are some basic configurations need to be set in advance.  </p><p>By replacing {YOUR NAME} with your first and last name:</p><div ><pre class="highlight"><code class="hljs ruby"><span class="nb">$ </span><span class="nb">git config  --global user.name &#123;YOUR NAME&#125; </span></code></pre></div><p>Then, replaceing {EMAIL} with the email associated with your GitHub account:</p><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ </span><span class="nb">git config --global user.email &#123;EMAIL&#125; </span></code></pre></div><p>Now, you can see your current configurations, type:</p><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ </span><span class="nb">git config --list</span></code></pre></div><h3 id="Connect-an-existing-progect-with-github"><a href="#Connect-an-existing-progect-with-github" class="headerlink" title="Connect an existing progect with github"></a>Connect an existing progect with github</h3><p>If you have an existing progect and want to connect with github, you can do the following and start to tract with git.</p><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb"># Initialize the local directory as a Git repository.$ git init# Add the URL for the remote repository where your local repository will be pushed.$ git remote add origin < repository URL ># Verifies the new remote URL$ git remote -v# Push an existing repository$ git push -u origin master</span></code></pre></div><h3 id="High-Frequency-Git-Commands"><a href="#High-Frequency-Git-Commands" class="headerlink" title="High Frequency Git Commands"></a>High Frequency Git Commands</h3><h6><ol>    <li><a href="#ShowStatus">Show the status of the files on your branch</a></li>    <li><a href="#CreateBranch">Create a new branch</a></li>        <li><a href="#CheckoutBranch">Check out to your new branch</a></li>    <li><a href="#MergeBranch">Join two or more development histories together</a></li>    <li><a href="#CompareChange">Compare the changes</a></li>    <li><a href="#AddFile">Add your file to the staging area</a></li>    <li><a href="#HistroyCommit">See the histroy of commits</a></li>    <li><a href="#CommitFile">Commit your file and type the commit message</a></li>    <li><a href="#PushCommit">Push your commit to the remote and set a trackng branch</a></li>    <li><a href="#UpdateRepo">Update your local copy of repository</a></li>    <li><a href="#StashChange">Stash your work</a></li>    <li><a href="#Bisect">Binary search the commit</a></li></ol></h6><h4 id="Git-Commands"><a href="#Git-Commands" class="headerlink" title="Git Commands"></a>Git Commands</h4><ol><li><a name="ShowStatus"></a> Show the status of the files on your branch:</li><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git status </span></code></pre></div><li><a name="CreateBranch"></a> Create a new branch:</li><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git branch &#123;BRANCH-NAME&#125;</span></code></pre></div><li><a name="CheckoutBranch"></a> Check out to your new branch:</li><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git checkout &#123;BRANCH-NAME&#125;</span></code></pre></div><li><a name="MergeBranch"></a> Join two or more development histories together:</li><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git merge &#123;BRANCH-NAME&#125;</span></code></pre></div><div>Example:<div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb"># First, let's check out to the "master" branch$ git checkout master# Then, merge Dev to current branch$ git merge Dev</span></code></pre></div><p>Description: these two syntaxes will replay the changes made on the “Dev” into the current branch “master” since “Dev” is diverged from “master”.</p><p>Now, you can push a new commit describing the merging change, and hence the current commit is already on the top of “master”.</p></div><p></p><li><a name="CompareChange"></a> Compare the changes:</li><p></p><ul style="list-style-type:disc">  <li> Show you any uncommitted changes since the last commit, type:</li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git diff </span></code></pre></div>    <li> Compare a specific file across branches, type:</li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git diff  &#123;BRANCH-NAME&#125; &#123;OTHER-BRANCH-NAME&#125; &#123;FILE-NAME&#125; </span></code></pre></div></ul>  <li><a name="AddFile"></a>  Add your file to the staging area:</li><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb"># Preparing to become part of the next commit$ git add &#123;FILE-NAME&#125;</span></code></pre></div><li><a name="HistroyCommit"></a> See the histroy of commits:</li><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git log </span></code></pre></div><li><a name="CommitFile"></a> Commit your file and type the commit message:</li><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git commit -m "your message"</span></code> </pre></div><li><a name="PushCommit"></a> Push your commit to the remote and set a trackng branch:</li><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git push  -u origin &#123;BRANCH-NAME&#125; </span></code></pre></div><li><a name="UpdateRepo"></a> Update your local copy of repository:</li><div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git pull </span></code></pre></div><li><a name="StashChange"></a> Stash your work:</li><p></p><ul style="list-style-type:disc">   <li> Stash uncommitted changes in local repo </li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git stash </span></code></pre></div>    <li> Re-apply your stashed changes</li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb"># Reappling the changes and removing$ git stash pop# Reappling the changes and keeping$ git stash apply </span></code></pre></div>    <li> Manage multiple stashes</li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git stash list </span></code></pre></div>    <li> View stash diff</li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git stash show -p </span></code></pre></div>  </ul><li><a name="StashChange"></a> <a name="Bisect"> Binary search to find the commit: </a> </li><p></p><ul style="list-style-type:disc">   <li> Use binary search to find the commit </li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb">$ git bitsect &lt;subcommand&gt; &lt;options&gt; </span></code></pre></div>  <li> Start a bisect session </li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb" style="font-size: 100%">$ git bitsect start </span></code></pre></div>  <li> Bisect reset </li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb" style="font-size: 100%">$ git bitsect reset</span></code></pre></div>  <li> Bisect skip </li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb" style="font-size: 100%">$ git bisect skip</span></code></pre></div>  <li> Show bisect log </li>  <div class="language-shell highlighter-rouge"><pre class="highlight"><code class="hljs ruby"><span class="nb" style="font-size: 100%">$ git bisect log# good: [72a35907200b42246fd039d495cbef8d80fdefe3] Miscellaneousgit bisect good 72a35907200b42246fd039d495cbef8d80fdefe3# good: [72a35907200b42246fd039d495cbef8d80fdefe3] Miscellaneousgit bisect good 72a35907200b42246fd039d495cbef8d80fdefe3# skip: [72a35907200b42246fd039d495cbef8d80fdefe3] Miscellaneousgit bisect skip 72a35907200b42246fd039d495cbef8d80fdefe3# bad: [72a35907200b42246fd039d495cbef8d80fdefe3] Miscellaneousgit bisect bad 72a35907200b42246fd039d495cbef8d80fdefe3  </span></code></pre></div></ul></ol><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul><li><a href="https://git-scm.com/">Git SCM</a></li></ul><p>Thanks for reading! Feel free to leave the comments below or <a href="mailto:qazqazqaz850@gmail.com">email</a> to me. Any pieces of advice or discussions are always welcome. :)</p><p>Hope this post will help! :)</p></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Due to the most time on my job, we need to type many git command lines. So that this article is used to sort several git commands frequently used for easily searching.&lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    <category term="features" scheme="https://louissrliu.github.io/categories/louissrliu/features/"/>
    
    
    <category term="git" scheme="https://louissrliu.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>中文測試</title>
    <link href="https://louissrliu.github.io/2013/10/02/%E4%B8%AD%E6%96%87%E6%B8%AC%E8%A9%A6/"/>
    <id>https://louissrliu.github.io/2013/10/02/%E4%B8%AD%E6%96%87%E6%B8%AC%E8%A9%A6/</id>
    <published>2013-10-02T15:31:30.000Z</published>
    <updated>2022-08-26T09:46:17.274Z</updated>
    
    <content type="html"><![CDATA[<p>This is a chinese test post to show you how chinese is displayed.</p><span id="more"></span><p>善我王上魚、產生資西員合兒臉趣論。畫衣生這著爸毛親可時，安程幾？合學作。觀經而作建。都非子作這！法如言子你關！手師也。</p><p>以也座論頭室業放。要車時地變此親不老高小是統習直麼調未，行年香一？</p><p>就竟在，是我童示讓利分和異種百路關母信過明驗有個歷洋中前合著區亮風值新底車有正結，進快保的行戰從：弟除文辦條國備當來際年每小腳識世可的的外的廣下歌洲保輪市果底天影；全氣具些回童但倒影發狀在示，數上學大法很，如要我……月品大供這起服滿老？應學傳者國：山式排只不之然清同關；細車是！停屋常間又，資畫領生，相們制在？公別的人寫教資夠。資再我我！只臉夫藝量不路政吃息緊回力之；兒足灣電空時局我怎初安。意今一子區首者微陸現際安除發連由子由而走學體區園我車當會，經時取頭，嚴了新科同？很夫營動通打，出和導一樂，查旅他。坐是收外子發物北看蘭戰坐車身做可來。道就學務。</p><p>國新故。</p><blockquote><p>工步他始能詩的，裝進分星海演意學值例道……於財型目古香亮自和這乎？化經溫詩。只賽嚴大一主價世哥受的沒有中年即病行金拉麼河。主小路了種就小為廣不？</p></blockquote><p><em>From <a href="http://www.richyli.com/tool/loremipsum/">亂數假文產生器 - Chinese Lorem Ipsum</a></em></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;This is a chinese test post to show you how chinese is displayed.&lt;/p&gt;</summary>
    
    
    
    <category term="louissrliu" scheme="https://louissrliu.github.io/categories/louissrliu/"/>
    
    <category term="features" scheme="https://louissrliu.github.io/categories/louissrliu/features/"/>
    
    
    <category term="chinese" scheme="https://louissrliu.github.io/tags/chinese/"/>
    
  </entry>
  
</feed>
